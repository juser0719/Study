{"remainingRequest":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/babel-loader/lib/index.js!/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/src/components/house/HouseList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/src/components/house/HouseList.vue","mtime":1637754541279},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/babel.config.js","mtime":1637211990973},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Study/FE/Vue_FE/Vue_project/happyhouse/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HouseList.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n<template>\r\n  <div>\r\n    <b-row>\r\n      <b-container id=\"map\" style=\"width: 100%; height: 500px\"></b-container>\r\n    </b-row>\r\n    <b-container v-if=\"houses\" class=\"bv-example-row mt-3\">\r\n      <house-list-row\r\n        v-for=\"(house, index) in houses\"\r\n        :key=\"index\"\r\n        :house=\"house\"\r\n      />\r\n    </b-container>\r\n    <b-container v-else class=\"bv-example-row mt-3\">\r\n      <b-row>\r\n        <b-col><b-alert show>아파트 목록이 없습니다.</b-alert></b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HouseListRow from \"@/components/house/HouseListRow.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\n\r\nconst houseStore = \"houseStore\";\r\nexport default {\r\n  name: \"HouseList\",\r\n  components: {\r\n    HouseListRow,\r\n  },\r\n  data() {\r\n    return {\r\n      map: null,\r\n      markers: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(houseStore, [\"houseInfo\"]),\r\n    ...mapState(houseStore, [\"houses\"]),\r\n  },\r\n  updated() {\r\n    console.log(\"make start\");\r\n    this.displayMarker(this.houseInfo);\r\n    console.log(\"make end\");\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=6990eed65ef1b708187bd62ce4f1afe6\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n      this.map = new kakao.maps.Map(container, options);\r\n    },\r\n    displayMarker(places) {\r\n      //var fragment = document.createDocumentFragment();\r\n      var bounds = new kakao.maps.LatLngBounds();\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      this.removeMarker();\r\n      console.log(\"places 길이 : \" + places.length);\r\n      for (var i = 0; i < places.length; i++) {\r\n        var placePosition = new kakao.maps.LatLng(places[i].lat, places[i].lng);\r\n        console.log(\"places positions : \" + placePosition);\r\n        // var marker = this.addMarker(placePosition, i);\r\n        // var itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        bounds.extend(placePosition);\r\n        this.addMarker(placePosition, i);\r\n        // 마커와 검색결과 항목에 mouseover 했을때\r\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n\r\n        // (function (marker, title, code, place) {\r\n        //   kakao.maps.event.addListener(marker, \"click\", function () {\r\n        //     displayInfowindow(marker, title, place);\r\n        //     console.log(title + \" \" + code);\r\n        //   });\r\n\r\n        //   kakao.maps.event.addListener(map, \"click\", function () {\r\n        //     console.log(customOverlay);\r\n        //     customOverlay.setMap(null);\r\n        //   });\r\n\r\n        // itemEl.onmouseover = function () {\r\n        //   displayInfowindow(marker, title);\r\n        // };\r\n\r\n        // itemEl.onmouseout = function () {\r\n        //   customOverlay.setMap(null);\r\n        // };\r\n        // })(marker, places[i].aptName, places[i].aptCode, places[i]);\r\n\r\n        // fragment.appendChild(itemEl);\r\n      }\r\n      // 마커를 생성하고 지도에 표시합니다\r\n\r\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n      this.map.setBounds(bounds);\r\n    },\r\n    addMarker(position, idx) {\r\n      var imageSrc =\r\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n        imgOptions = {\r\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n        },\r\n        markerImage = new kakao.maps.MarkerImage(\r\n          imageSrc,\r\n          imageSize,\r\n          imgOptions\r\n        ),\r\n        marker = new kakao.maps.Marker({\r\n          position: position, // 마커의 위치\r\n          image: markerImage,\r\n        });\r\n\r\n      marker.setMap(this.map); // 지도 위에 마커를 표출합니다\r\n      this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n      return marker;\r\n    },\r\n    removeMarker() {\r\n      for (var i = 0; i < this.markers.length; i++) {\r\n        this.markers[i].setMap(null);\r\n      }\r\n      this.markers = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n-->\r\n<template>\r\n  <div>\r\n    <b-row>\r\n      <b-container id=\"map\" style=\"width: 100%; height: 500px\"></b-container>\r\n    </b-row>\r\n    <b-container v-if=\"houses\" class=\"bv-example-row mt-3\">\r\n      <house-list-row\r\n        v-for=\"(house, index) in houses\"\r\n        :key=\"index\"\r\n        :house=\"house\"\r\n      />\r\n    </b-container>\r\n    <b-container v-else class=\"bv-example-row mt-3\">\r\n      <b-row>\r\n        <b-col><b-alert show>아파트 목록이 없습니다.</b-alert></b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HouseListRow from \"@/components/house/HouseListRow.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\n\r\nconst houseStore = \"houseStore\";\r\nexport default {\r\n  name: \"HouseList\",\r\n  components: {\r\n    HouseListRow,\r\n  },\r\n  data() {\r\n    return {\r\n      map: null,\r\n      markers: [],\r\n      geocoder: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(houseStore, [\"houseInfo\"]),\r\n    ...mapState(houseStore, [\"houses\"]),\r\n  },\r\n  updated() {\r\n    // console.log(\"make start\");\r\n    this.displayMarker(this.houseInfo);\r\n    // console.log(\"make end\");\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=6990eed65ef1b708187bd62ce4f1afe6&libraries=services\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 5,\r\n      };\r\n      this.map = new kakao.maps.Map(container, options);\r\n      this.geocoder = new kakao.maps.services.Geocoder();\r\n    },\r\n    async displayMarker(places) {\r\n      console.log(\"displayMarker\");\r\n      //var fragment = document.createDocumentFragment();\r\n      var bounds = await new kakao.maps.LatLngBounds();\r\n      var list = [];\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      this.removeMarker();\r\n      console.log(places);\r\n      places.forEach((p) => {\r\n        var addr = p.roadName + \" \" + parseInt(p.buildingCode);\r\n        console.log(\"addr\", addr, \"\\n\", \"places : \", p);\r\n        // var position = await new kakao.maps.LatLng(places[i].y, places[i].x);\r\n        // list.push(position);\r\n        if (p.roadName !== null) {\r\n          console.log(\"in!!!!\");\r\n          this.geocoder.addressSearch(addr, (result, status) => {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              var position = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n              list.push(position);\r\n              console.log(\"result\", result);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      // for (var i = 0; i < places.length; i++) {\r\n      //   var addr = places[i].roadName + \" \" + parseInt(places[i].buildingCode);\r\n      //   console.log(\"addr\", addr, \"\\n\", \"places : \", places[i]);\r\n      //   // var position = await new kakao.maps.LatLng(places[i].y, places[i].x);\r\n      //   // list.push(position);\r\n      //   if (places[i].roadName !== null) {\r\n      //     console.log(\"in!!!!\");\r\n      //     await this.geocoder.addressSearch(addr, (result, status) => {\r\n      //       if (status === kakao.maps.services.Status.OK) {\r\n      //         var position = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n      //         list.push(position);\r\n      //         console.log(\"result\", result);\r\n      //       }\r\n      //     });\r\n      //   }\r\n      // }\r\n\r\n      console.log(\"displayMarker list length: \" + list.length);\r\n      this.addMarker(list);\r\n      this.map.setBounds(bounds);\r\n    },\r\n    addMarker(list) {\r\n      console.log(\"addMarker list : \" + list);\r\n      for (var idx = 0; idx < list.length; idx++) {\r\n        var imageSrc =\r\n            \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n          imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n          imgOptions = {\r\n            spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n            spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n            offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n          },\r\n          markerImage = new kakao.maps.MarkerImage(\r\n            imageSrc,\r\n            imageSize,\r\n            imgOptions\r\n          ),\r\n          marker = new kakao.maps.Marker({\r\n            position: list[idx], // 마커의 위치\r\n            image: markerImage,\r\n          });\r\n\r\n        marker.setMap(this.map); // 지도 위에 마커를 표출합니다\r\n        this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n      }\r\n    },\r\n    removeMarker() {\r\n      for (var i = 0; i < this.markers.length; i++) {\r\n        this.markers[i].setMap(null);\r\n      }\r\n      this.markers = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>"],"sourceRoot":"src/components/house"}]}